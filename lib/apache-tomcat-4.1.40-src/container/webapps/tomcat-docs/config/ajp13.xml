<?xml version="1.0"?>
<!DOCTYPE document [
  <!ENTITY project SYSTEM "project.xml">
]>
<!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at
  
       http://www.apache.org/licenses/LICENSE-2.0
  
   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->

<document url="ajp13.html">

  &project;

  <properties>
    <author email="remm@apache.org">Remy Maucherat</author>
    <title>The AJP/1.3 Connector</title>
  </properties>

<body>


<section name="Introduction">
  <p><b>IMPORTANT NOTE: The AJP/1.3 Connector is now deprecated. Use the 
  <a href="coyotejk.html">Coyote JK Connector</a> instead.</b></p>

  <p>The <strong>AJP/1.3 Connector</strong> element represents a
  <strong>Connector</strong> component that communicates with a web
  connector via the <code>JK</code> protocol (also known as the AJP protocol).
  This is used for cases where you wish to invisibly integrate Tomcat 4 into 
  an existing (or new) web server installation, and you want the web server to
  handle the static content contained in the web application, and/or utilize 
  the web server's SSL processing.  In many application environments, this will 
  result in better overall performance than running your applications under
  Tomcat stand-alone using the <a href="coyote.html">Coyote HTTP/1.1
  Connector</a>. However, the only way to know for sure whether it will
  provide better performance for <strong>your</strong> application is to try
  it both ways.</p>

  <p>This connector supports load balancing when used in conjunction with
  the <code>jvmRoute</code> attribute of the 
  <a href="engine.html">Engine</a>.</p>

</section>


<section name="Attributes">

  <subsection name="Common Attributes">

  <p>All implementations of <strong>Connector</strong>
  support the following attributes:</p>

  <attributes>

    <attribute name="className" required="true">
      <p>Java class name of the implementation to use.  This class must
      implement the <code>org.apache.catalina.Connector</code> interface.
      You must specify the standard value defined below.</p>
    </attribute>

    <attribute name="enableLookups" required="false">
      <p>Set to <code>true</code> if you want calls to
      <code>request.getRemoteHost()</code> to perform DNS lookups in
      order to return the actual host name of the remote client.  Set
      to <code>false</code> to skip the DNS lookup and return the IP
      address in String form instead (thereby improving performance).
      By default, DNS lookups are disabled.</p>
    </attribute>

    <attribute name="redirectPort" required="false">
      <p>If this <strong>Connector</strong> is supporting non-SSL
      requests, and a request is received for which a matching
      <code>&lt;security-constraint&gt;</code> requires SSL transport,
      Catalina will automatically redirect the request to the port
      number specified here.</p>
    </attribute>

    <attribute name="scheme" required="false">
      <p>Set this attribute to the name of the protocol you wish to have
      returned by calls to <code>request.getScheme()</code>.  For
      example, you would set this attribute to "<code>https</code>"
      for an SSL Connector.  The default value is "<code>http</code>".</p>
    </attribute>

    <attribute name="secure" required="false">
      <p>Set this attribute to <code>true</code> if you wish to have
      calls to <code>request.isSecure()</code> to return <code>true</code>
      for requests received by this Connector (you would want this on an
      SSL Connector).  The default value is <code>false</code>.</p>
    </attribute>

  </attributes>

  </subsection>

  <subsection name="Standard Implementation">

  <p>The standard implementation of <strong>JK/AJP Connector</strong> is
  <strong>org.apache.ajp.tomcat4.Ajp13Connector</strong>.</p>

  <p><strong>This implementation supports the JK 1.3 and 1.4 protocols
  (also known as AJP 1.3 and 1.4).</strong></p>

  <p>It supports the following additional attributes (in addition to the
  common attributes listed above):</p>

  <attributes>

    <attribute name="acceptCount" required="false">
      <p>The maximum queue length for incoming connection requests when
      all possible request processing threads are in use.  Any requests
      received when the queue is full will be refused.  The default
      value is 10.</p>
    </attribute>

    <attribute name="address" required="false">
      <p>For servers with more than one IP address, this attribute
      specifies which address will be used for listening on the specified
      port.  By default, this port will be used on all IP addresses
      associated with the server.</p>
    </attribute>

    <attribute name="debug" required="false">
      <p>The debugging detail level of log messages generated by this
      component, with higher numbers creating more detailed output.
      If not specified, this attribute is set to zero (0).</p>
    </attribute>

    <attribute name="maxProcessors" required="false">
      <p>The maximum number of request processing threads to be created
      by this <strong>Connector</strong>, which therefore determines the
      maximum number of simultaneous requests that can be handled.  If
      not specified, this attribute is set to 20.</p>
      <p><b>NOTE:</b>For Apache 1.3 on Unix there is a 1 to 1 mapping
      between httpd processes and Ajp13Processors.  You must configure
      maxProcessors to be greater than or equal to the maximum number
      of httpd processes your Apache web server spawns.</p>
    </attribute>

    <attribute name="minProcessors" required="false">
      <p>The number of request processing threads that will be created
      when this <strong>Connector</strong> is first started.  This
      attribute should be set to a value smaller than that set for
      <code>maxProcessors</code>.  The default value is 5.</p>
    </attribute>

    <attribute name="port" required="true">
      <p>The TCP port number on which this <strong>Connector</strong>
      will create a server socket and await incoming connections.  Your
      operating system will allow only one server application to listen
      to a particular port number on a particular IP address.</p>
    </attribute>

    <attribute name="tomcatAuthentication" required="false">
      <p>This flag, which value defaults to <code>true</code>, indicates
      whether or not authentication will be handled by Tomcat or the native 
      web server. If the attribute value is <code>true</code>, any pricipal 
      authenticated by the native web server will be ignored, and Tomcat will 
      take care of the authentication. If the attribute value 
      is <code>false</code>, Tomcat will not attempt to authenticate 
      a principal if the native web server has already authenticated one.</p>
    </attribute>

  </attributes>

  </subsection>

</section>


<section name="Nested Components">

  <p></p>

</section>


</body>

</document>
